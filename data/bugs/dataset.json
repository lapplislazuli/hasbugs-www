{"datapoints": [{"id": "cabal-1", "repositoryurl": "git@github.com:haskell/cabal", "repository": "cabal", "license": "BSD-3", "hasbugsversion": "1.0.0", "faultcommit": "0184445b83af20dd9bb0e2ec09a8ba4b8d14a755", "fixcommit": "55e036a2c40586bc0f69aaa7d85aab931a0a5c80", "ghcversion": "8.10.7", "buildframework": "stack", "testedwith": "cabal-test", "testframeworks": ["QuickCheck", "tasty", "tasty-quickcheck", "Cabal-QuickCheck", "tasty-hunit", "tasty-golden", "tasty-expected-failure"], "testpatch": true, "description": "Cabal starts multiple processes to build a project. 'cabal run' termination does not terminate all child processes automatically as well. The solution is to use 'withCreateProcess' rather than 'createProcess' and throw an asynchronous exception from the main thread when a termination is wanted.", "categories": ["system-test", "os", "multi-threading", "multi-processing"], "relatedissues": ["https://github.com/haskell/cabal/issues/7914"], "relatedprs": ["https://github.com/haskell/cabal/pull/7921", "https://github.com/haskell/cabal/pull/7757"], "faultlocations": [{"startline": 127, "endline": 127, "file": "cabal/src/distribution/simple/program/run.hs", "module": "distribution.simple.program.run", "function": "runprograminvocation"}, {"startline": 131, "endline": 132, "file": "cabal/src/distribution/simple/program/run.hs", "module": "distribution.simple.program.run", "function": "runprograminvocation"}, {"startline": 1196, "endline": 1197, "file": "cabal-install/src/Distribution/Client/ProjectConfig.hs", "module": "Distribution.Client.ProjectConfig", "function": "syncAndReadSourcePackagesRemoteRepos"}], "fixlocations": [{"startline": 127, "endline": 127, "file": "cabal/src/distribution/simple/program/run.hs", "module": "distribution.simple.program.run", "function": "runprograminvocation"}, {"startline": 175, "endline": 175, "file": "cabal-install/main/Main.hs", "module": "Main", "function": "main"}, {"startline": 1196, "endline": 1196, "file": "cabal-install/src/Distribution/Client/ProjectConfig.hs", "module": "Distribution.Client.ProjectConfig", "function": "syncAndReadSourcePackagesRemoteRepos"}, {"startline": 1, "endline": 49, "file": "cabal-install/src/Distribution/Client/Signal.hs", "module": "Distribution.Client.Signal", "function": ""}]}, {"id": "cabal-2", "repositoryurl": "git@github.com:haskell/cabal", "repository": "cabal", "license": "BSD-3", "faultcommit": "2e9af5bb241f187bedf149d2ef272570384e5991", "fixcommit": "1b8bf8ccb58c131efcbb3925bcbb5bd4c14adc03", "ghcversion": "8.10.7", "buildframework": "stack", "testedwith": "tasty-golden", "testframeworks": ["QuickCheck", "tasty", "tasty-quickcheck", "Cabal-QuickCheck", "tasty-hunit", "tasty-golden", "tasty-expected-failure"], "testpatch": true, "description": "Users can use 'cabal init' to bootstrap projects. 'cabal init -i' does not automatically fill in author name and e-mail anymore. The solution is to add a guess (=default) to the prompt.", "categories": ["missing-value", "golden-test", "unit-test"], "relatedissues": ["https://github.com/haskell/cabal/issues/8255"], "relatedprs": ["https://github.com/haskell/cabal/pull/8267"], "faultlocations": [{"startline": 358, "endline": 359, "file": "cabal-install/src/Distribution/Client/Init/Interactive/Command.hs", "module": "Distribution.Client.Init.Interactive.Command", "function": "authorPrompt"}, {"startline": 362, "endline": 363, "file": "cabal-install/src/Distribution/Client/Init/Interactive/Command.hs", "module": "Distribution.Client.Init.Interactive.Command", "function": "emailPrompt"}], "fixlocations": [{"startline": 359, "endline": 361, "file": "cabal-install/src/Distribution/Client/Init/Interactive/Command.hs", "module": "Distribution.Client.Init.Interactive.Command", "function": "authorPrompt"}, {"startline": 364, "endline": 366, "file": "cabal-install/src/Distribution/Client/Init/Interactive/Command.hs", "module": "Distribution.Client.Init.Interactive.Command", "function": "emailPrompt"}]}, {"id": "cabal-3", "repositoryurl": "git@github.com:haskell/cabal", "repository": "cabal", "license": "BSD-3", "faultcommit": "a49c1ddae0d768b6978cac76a50a01447e7066b6", "fixcommit": "52cc82d430e6b9efa4024138119cc26b787d47ad", "ghcversion": "8.10.7", "buildframework": "stack", "testframeworks": ["QuickCheck", "tasty", "tasty-quickcheck", "Cabal-QuickCheck", "tasty-hunit", "tasty-golden", "tasty-expected-failure"], "testpatch": true, "testedwith": "cabal-test", "description": "Cabal provides and parses it's own configuration file. The used method 'cabal HEAD' is confused by trailing whitespaces in 'default-language' tags. The solution is to fix parsing by changing 'some anyChar' to 'munch1 isAlphaNum'. This way, only characters are parsed into a language.", "categories": ["parsing", "whitespace", "system-test"], "relatedissues": ["https://github.com/haskell/cabal/issues/8507"], "relatedprs": ["https://github.com/haskell/cabal/pull/8508"], "faultlocations": [{"startline": 80, "endline": 80, "file": "Cabal-syntax/src/Language/Haskell/Extension.hs", "module": "Language.Haskell.Extension", "function": "parsec"}], "fixlocations": [{"startline": 80, "endline": 80, "file": "Cabal-syntax/src/Language/Haskell/Extension.hs", "module": "Language.Haskell.Extension", "function": "parsec"}]}, {"id": "cabal-4", "repositoryurl": "git@github.com:haskell/cabal", "repository": "cabal", "license": "BSD-3", "faultcommit": "aabe56252fcceb58f2f3f80451bba7ca13109266", "fixcommit": "84884bbc21a63b61d698138f549baae152efd878", "ghcversion": "8.10.7", "buildframework": "stack", "testframeworks": ["QuickCheck", "tasty", "tasty-quickcheck", "Cabal-QuickCheck", "tasty-hunit", "tasty-golden", "tasty-expected-failure"], "testpatch": true, "testedwith": "cabal-test", "description": "Cabal supports a dry-run-feature, which runs a subset of the specified commands.The '--dry-run' did not actually dry-run for commands 'v2-configure', 'v2-freeze', 'v2-run', and 'v2-exec'. Instead, the dry-run flag was ignored and the commands did perform a few actions. The fix is to add if-expressions where needed in the commands' code to perform the dry-run as expected.", "categories": ["missing-cases", "system-test"], "relatedissues": ["https://github.com/haskell/cabal/issues/7379"], "relatedprs": ["https://github.com/haskell/cabal/pull/7407"], "faultlocations": [{"startline": 92, "endline": 94, "file": "cabal-install/src/Distribution/Client/CmdConfigure.hs", "module": "Distribution.Client.CmdConfigure", "function": "configureAction"}, {"startline": 104, "endline": 104, "file": "cabal-install/src/Distribution/Client/CmdConfigure.hs", "module": "Distribution.Client.CmdConfigure", "function": "configureAction'"}, {"startline": 109, "endline": 121, "file": "cabal-install/src/Distribution/Client/CmdConfigure.hs", "module": "Distribution.Client.CmdConfigure", "function": "configureAction'"}, {"startline": 188, "endline": 188, "file": "cabal-install/src/Distribution/Client/CmdExec.hs", "module": "Distribution.Client.CmdExec", "function": "execAction"}, {"startline": 119, "endline": 121, "file": "cabal-install/src/Distribution/Client/CmdFreeze.hs", "module": "Distribution.Client.CmdFreeze", "function": "freezeAction"}, {"startline": 286, "endline": 294, "file": "cabal-install/src/Distribution/Client/CmdRun.hs", "module": "Distribution.Client.CmdRun", "function": "runAction"}], "fixlocations": [{"startline": 92, "endline": 99, "file": "cabal-install/src/Distribution/Client/CmdConfigure.hs", "module": "Distribution.Client.CmdConfigure", "function": "configureAction"}, {"startline": 113, "endline": 131, "file": "cabal-install/src/Distribution/Client/CmdConfigure.hs", "module": "Distribution.Client.CmdConfigure", "function": "configureAction'"}, {"startline": 137, "endline": 142, "file": "cabal-install/src/Distribution/Client/CmdConfigure.hs", "module": "Distribution.Client.CmdConfigure", "function": "shouldNotWriteFile"}, {"startline": 190, "endline": 195, "file": "cabal-install/src/Distribution/Client/CmdExec.hs", "module": "Distribution.Client.CmdExec", "function": "execAction"}, {"startline": 109, "endline": 110, "file": "cabal-install/src/Distribution/Client/CmdFreeze.hs", "module": "Distribution.Client.CmdFreeze", "function": "freezeAction"}, {"startline": 120, "endline": 128, "file": "cabal-install/src/Distribution/Client/CmdFreeze.hs", "module": "Distribution.Client.CmdFreeze", "function": "freezeAction"}, {"startline": 286, "endline": 300, "file": "cabal-install/src/Distribution/Client/CmdRun.hs", "module": "Distribution.Client.CmdRun", "function": "runAction"}]}, {"id": "cabal-5", "repositoryurl": "git@github.com:haskell/cabal", "repository": "cabal", "license": "BSD-3", "faultcommit": "e74a53b3d8b1a52cb86a8232e2e745d1bd64a8d7", "fixcommit": "41ed090a399791ff3a65f4059aa987e37fa9d262", "ghcversion": "8.10.7", "buildframework": "stack", "testframeworks": ["QuickCheck", "tasty", "tasty-quickcheck", "Cabal-QuickCheck", "tasty-hunit", "tasty-golden", "tasty-expected-failure"], "testpatch": true, "testedwith": "tasty-golden", "description": "When initialising a project with the '--no-comments' flag, cabal fields that would normally be commented out still had comments in front of them. Expected behaviour is that comments are not present in front of any fields, commented out or not. Solution is to always remove comments when the '--no-comments' flag is set.", "categories": ["logic", "refactoring", "golden-test", "system-test"], "relatedissues": ["https://github.com/haskell/cabal/issues/7769"], "relatedprs": ["https://github.com/haskell/cabal/pull/7770"], "faultlocations": [{"startline": 5, "endline": 15, "file": "./project/.../Module.hs", "module": "Fully.Qualified.Module", "function": "main"}, {"startline": 25, "endline": 35, "file": "./project/.../Module.hs", "module": "Fully.Qualified.Module", "function": "helper"}], "fixlocations": [{"startline": 5, "endline": 20, "file": "./project/.../Module.hs", "module": "Fully.Qualified.Module", "function": "main"}]}, {"id": "cabal-6", "repositoryurl": "git@github.com:haskell/cabal", "repository": "cabal", "license": "BSD-3", "faultcommit": "e69172166e1af60830247442939f413d472f0689", "fixcommit": "5adaf5855c856f1f2400c1a5821bc97503b413bc", "ghcversion": "8.10.7", "buildframework": "stack", "testframeworks": ["QuickCheck", "tasty", "tasty-quickcheck", "Cabal-QuickCheck", "tasty-hunit", "tasty-golden", "tasty-expected-failure"], "testpatch": true, "testedwith": "cabal-test", "description": "Multiple concurrent builds would sometimes give an error similar to 'ghc-pkg: cannot create: /home/edsko/path/to/main-package/dist-newstyle/packagedb/ghc-7.10.3 already exists' because packagedbs would be made at the same time. The solution is to initialise packagedbs at the start of the build process rather than when needed.", "categories": ["concurrency", "file-management", "system-test"], "relatedissues": ["https://github.com/haskell/cabal/issues/3460"], "relatedprs": ["https://github.com/haskell/cabal/pull/3509"], "faultlocations": [{"startline": 578, "endline": 578, "file": "cabal-install/Distribution/Client/ProjectBuilding.hs", "module": "Distribution.Client.ProjectBuilding", "function": "rebuildTargets"}, {"startline": 625, "endline": 626, "file": "cabal-install/Distribution/Client/ProjectPlanning.hs", "module": "Distribution.Client.ProjectPlanning", "function": "getPackageDBContents"}, {"startline": 645, "endline": 653, "file": "cabal-install/Distribution/Client/ProjectPlanning.hs", "module": "Distribution.Client.ProjectPlanning", "function": "getPackageDBContents"}], "fixlocations": [{"startline": 578, "endline": 581, "file": "cabal-install/Distribution/Client/ProjectBuilding.hs", "module": "Distribution.Client.ProjectBuilding", "function": "rebuildTargets"}, {"startline": 599, "endline": 599, "file": "cabal-install/Distribution/Client/ProjectBuilding.hs", "module": "Distribution.Client.ProjectBuilding", "function": "rebuildTargets"}, {"startline": 626, "endline": 633, "file": "cabal-install/Distribution/Client/ProjectBuilding.hs", "module": "Distribution.Client.ProjectBuilding", "function": "rebuildTargets"}, {"startline": 625, "endline": 625, "file": "cabal-install/Distribution/Client/ProjectPlanning.hs", "module": "Distribution.Client.ProjectPlanning", "function": "getPackageDBContents"}, {"startline": 648, "endline": 655, "file": "cabal-install/Distribution/Client/ProjectPlanning.hs", "module": "Distribution.Client.ProjectPlanning", "function": "getPackageDBContents"}]}, {"id": "hledger-2", "repositoryurl": "git@github.com:simonmichael/hledger", "repository": "hledger", "licence": "GPL-3.0", "hasbugsversion": "1.0.0", "faultcommit": "7063eba13ccaffa6118450adb191571851e45cec", "fixcommit": "75fc6767a9b326c3eb13f5f8b7bf7dabe65a3979", "ghcversion": "8.10.7", "buildframework": "stack", "testedwith": "shelltestrunner", "testframeworks": ["doctest", "tasty", "tasty-hunit", "hspec", "yesod-test"], "testpatch": true, "description": "In HLegder, users can get accumulated information of their financial accounts. Specifically with ROI, when iterating over the elements of an account, the elements where not checked to be zero before division. The fix is to filter (heading) zeroes.", "categories": ["integration-test", "div-by-0", "restructuring"], "relatedissues": ["https://github.com/simonmichael/hledger/issues/1833"], "relatedprs": ["https://github.com/simonmichael/hledger/pull/1906"], "faultlocations": [{"startline": 173, "endline": 175, "file": "./hledger/Hledger/Cli/Commands/Roi.hs", "module": "Hledger.Cli.Commands.Roi", "function": "timeWeightedReturn"}], "fixlocations": [{"startline": 175, "endline": 182, "file": "./hledger/Hledger/Cli/Commands/Roi.hs", "class": "Hledger.Cli.Commands.Roi", "function": "timeWeightedReturn"}]}, {"id": "hledger-3", "repositoryurl": "git@github.com:simonmichael/hledger", "repository": "hledger", "license": "GPL-3.0", "hasbugsversion": "1.0.0", "faultcommit": "852ba7b10000077c6d77eda50bf76ea1019f0368", "fixcommit": "a65e64115a1e19033c3d51bb1a89081e6a03d3aa", "ghcversion": "8.10.7", "buildframework": "stack", "testedwith": "shelltestrunner", "testframeworks": ["doctest", "tasty", "tasty-hunit", "hspec", "yesod-test"], "testpatch": true, "description": "HLedger supports aliases for accounts, including support for regex matching. There was incorrect parsing for these alias regexes, solved by adding the right 'between' and adding a line for allowing any character to be doubly escaped.", "categories": ["integration-test", "parser-error", "regex", "character-escaping"], "relatedissues": ["https://github.com/simonmichael/hledger/issues/982"], "relatedprs": ["https://github.com/simonmichael/hledger/pull/1832"], "faultlocations": [{"startline": 1518, "endline": 1522, "file": "hledger-lib/Hledger/Read/Common.hs", "module": "Hledger.Read.Common", "function": "regexaliasp"}], "fixlocations": [{"startline": 1518, "endline": 1523, "file": "hledger-lib/Hledger/Read/Common.hs", "module": "Hledger.Read.Common", "function": "regexaliasp"}]}, {"id": "hledger-4", "repositoryurl": "git@github.com:simonmichael/hledger", "repository": "hledger", "license": "GPL-3.0", "hasbugsversion": "1.0.0", "faultcommit": "4006ab6d2d5623fbba9a64ae70722ac1b94da3ad", "fixcommit": "9d5397deb6d5d6e449221d35286f6e80f750cf55", "ghcversion": "8.10.7", "buildframework": "stack", "testedwith": "shelltestrunner", "testframeworks": ["doctest", "tasty", "tasty-hunit", "hspec", "yesod-test"], "testpatch": true, "description": "Hledger supports transactions with up to 1 'empty posting' (= no monetary amount). The option 'auto' can add another empty posting, which can result in faulty 2-empty-posting transactions. As a fix, 'auto' generated postings are non-empty by default.", "categories": ["integration-test", "feature-collision", "data-inconsistency"], "relatedissues": ["https://github.com/simonmichael/hledger/issues/1276"], "relatedprs": ["https://github.com/simonmichael/hledger/pull/1714"], "faultlocations": [{"startline": 92, "endline": 93, "file": "hledger/Hledger/Cli/Commands/Print.hs", "module": "Hledger.Cli.Commands.Print", "function": "entriesReportAsText"}], "fixlocations": [{"startline": 92, "endline": 99, "file": "hledger/Hledger/Cli/Commands/Print.hs", "module": "Hledger.Cli.Commands.Print", "function": "entriesReportAsText"}]}, {"id": "hls-1", "repositoryurl": "git@github.com:haskell/haskell-language-server", "repository": "hls", "license": "Apache-2.0", "hasbugsversion": "1.0.0", "faultcommit": "ffefe761c8210c6b4a0c5092935f34767a3cd827", "fixcommit": "0f6cd41d51e1dd81ddeb117ab949ceb1f38e68cf", "ghcversion": "9.2.3", "buildframework": "stack", "testframeworks": ["lsp-test", "tasty", "tasty-expected-failure", "tasty-golden", "tasty-hunit", "tasty-rerun", "tasty-hspec", "hspec", "QuickCheck", "tasty-quickcheck", "ghcide-test-utils"], "testpatch": true, "testedwith": "tasty-golden", "description": "In Haskell you can pun-records, which means to access field variables in a breviated way. When records are punned, there is a reference from pun to field declaration and from pun-name-use to pun-declaration, but no transitive reference. Meaning refactoring did not propagate to the latter. Solution is a second pass to find indirect pun-references and rename those as well.", "categories": ["integration-test", "data-model", "refactoring", "design decision"], "relatedissues": ["https://github.com/haskell/haskell-language-server/issues/2970"], "relatedprs": ["https://github.com/haskell/haskell-language-server/pull/3013"], "faultlocations": [{"startline": 69, "endline": 77, "file": "plugins/hls-rename-plugin/src/Ide/Plugin/Rename.hs", "module": "Ide.Plugin.Rename", "function": "renameProvider"}, {"startline": 96, "endline": 96, "file": "plugins/hls-rename-plugin/src/Ide/Plugin/Rename.hs", "module": "Ide.Plugin.Rename", "function": "failWhenImportOrExport"}], "fixlocations": [{"startline": 68, "endline": 88, "file": "plugins/hls-rename-plugin/src/Ide/Plugin/Rename.hs", "module": "Ide.Plugin.Rename", "function": "renameProvider"}, {"startline": 107, "endline": 107, "file": "plugins/hls-rename-plugin/src/Ide/Plugin/Rename.hs", "module": "Ide.Plugin.Rename", "function": "failWhenImportOrExport"}, {"startline": 249, "endline": 253, "file": "plugins/hls-rename-plugin/src/Ide/Plugin/Rename.hs", "module": "Ide.Plugin.Rename", "function": "locToFilePos"}]}, {"id": "hls-2", "repositoryurl": "git@github.com:haskell/haskell-language-server", "repository": "hls", "license": "Apache-2.0", "hasbugsversion": "1.0.0", "faultcommit": "548ca17cc73546407ac6e2cd26068a12f2d56af7", "fixcommit": "49373fd01465d56146fa5f1ceded3907ad520ca0", "ghcversion": "9.2.3", "buildframework": "stack", "testframeworks": ["lsp-test", "tasty", "tasty-expected-failure", "tasty-golden", "tasty-hunit", "tasty-rerun", "tasty-hspec", "hspec", "QuickCheck", "tasty-quickcheck", "ghcide-test-utils"], "testpatch": true, "testedwith": "tasty-golden", "description": "HLS utilizes cabal features, in this case the definition of addition source directories. These directories must be specified as strings where the first character of a suggested module name is dropped if 'hs-source-dirs' is assigned simply as './' ('.' was expected). Fix is to canonicalise the path to always include the '/' and then trim it.", "categories": ["string-manipulation", "off-by-one", "path-handling", "integration-test"], "relatedissues": ["https://github.com/haskell/haskell-language-server/issues/3047"], "relatedprs": ["https://github.com/haskell/haskell-language-server/pull/3092"], "faultlocations": [{"startline": 127, "endline": 127, "file": "plugins/hls-module-name-plugin/src/Ide/Plugin/ModuleName.hs", "module": "Ide.Plugin.ModuleName", "function": "pathModuleNames"}, {"startline": 136, "endline": 136, "file": "plugins/hls-module-name-plugin/src/Ide/Plugin/ModuleName.hs", "module": "Ide.Plugin.ModuleName", "function": "pathModuleNames"}], "fixlocations": [{"startline": 143, "endline": 143, "file": "plugins/hls-module-name-plugin/src/Ide/Plugin/ModuleName.hs", "module": "Ide.Plugin.ModuleName", "function": "pathModuleNames"}, {"startline": 156, "endline": 156, "file": "plugins/hls-module-name-plugin/src/Ide/Plugin/ModuleName.hs", "module": "Ide.Plugin.ModuleName", "function": "pathModuleNames"}]}, {"id": "hls-3", "repositoryurl": "git@github.com:haskell/haskell-language-server", "repository": "hls", "license": "Apache-2.0", "hasbugsversion": "1.0.0", "faultcommit": "771d8f44e694c70d0ee487f2bd6d095fd5e1b99f", "fixcommit": "c3c73cf30bf8b59182e6df674e3f804b55b062ea", "ghcversion": "8.10.7", "buildframework": "stack", "testframeworks": ["lsp-test", "tasty", "tasty-expected-failure", "tasty-golden", "tasty-hunit", "tasty-rerun", "tasty-hspec", "hspec", "QuickCheck", "tasty-quickcheck", "ghcide-test-utils"], "testpatch": true, "testedwith": "tasty", "description": "HLS provides completion suggestions for users. Completions did not contain locally defined type families. The fix is to add type family definitions in class declarations.", "categories": ["integration-test", "missed case"], "relatedissues": [""], "relatedprs": ["https://github.com/haskell/haskell-language-server/pull/2987"], "faultlocations": [{"startline": 465, "endline": 465, "file": "ghcide/src/Development/IDE/Plugin/Completions/Logic.hs", "module": "Development.IDE.Plugin.Completions.Logic", "function": "localCompletionsForParsedModule"}, {"startline": 469, "endline": 469, "file": "ghcide/src/Development/IDE/Plugin/Completions/Logic.hs", "module": "Development.IDE.Plugin.Completions.Logic", "function": "localCompletionsForParsedModule"}], "fixlocations": [{"startline": 465, "endline": 465, "file": "ghcide/src/Development/IDE/Plugin/Completions/Logic.hs", "module": "Development.IDE.Plugin.Completions.Logic", "function": "localCompletionsForParsedModule"}, {"startline": 469, "endline": 471, "file": "ghcide/src/Development/IDE/Plugin/Completions/Logic.hs", "module": "Development.IDE.Plugin.Completions.Logic", "function": "localCompletionsForParsedModule"}]}, {"id": "hls-4", "repositoryurl": "git@github.com:haskell/haskell-language-server", "repository": "hls", "license": "Apache-2.0", "hasbugsversion": "1.0.0", "faultcommit": "cdc8f78a9852ed35cbfccc191a0b87f59dc9e271", "fixcommit": "0b8c793dfdf0d6adb1d4704343fa512c7646a15a", "ghcversion": "8.10.7", "buildframework": "stack", "testframeworks": ["lsp-test", "tasty", "tasty-expected-failure", "tasty-golden", "tasty-hunit", "tasty-rerun", "tasty-hspec", "hspec", "QuickCheck", "tasty-quickcheck", "ghcide-test-utils"], "testpatch": true, "testedwith": "tasty", "description": "HLS can suggest import of modules for the user. These generated imports can be placed incorrect, as it may be inserted before the 'where' of a module declaration, resulting in an invalid file. This has been addressed by rewriting the import-placement. ", "categories": ["integration-test", "rewrite", "ordering issue"], "relatedissues": ["https://github.com/haskell/haskell-language-server/issues/2414"], "relatedprs": ["https://github.com/haskell/haskell-language-server/pull/2981"], "faultlocations": [{"startline": 1391, "endline": 1392, "file": "ghcide/src/Development/IDE/Plugin/CodeAction.hs", "module": "Development.IDE.Plugin.CodeAction", "function": "newImportInsertRange"}, {"startline": 1397, "endline": 1403, "file": "ghcide/src/Development/IDE/Plugin/CodeAction.hs", "module": "Development.IDE.Plugin.CodeAction", "function": "findPositionNoImports"}], "fixlocations": [{"startline": 1412, "endline": 1419, "file": "ghcide/src/Development/IDE/Plugin/CodeAction.hs", "module": "Development.IDE.Plugin.CodeAction", "function": "newImportInsertRange"}, {"startline": 1424, "endline": 1428, "file": "ghcide/src/Development/IDE/Plugin/CodeAction.hs", "module": "Development.IDE.Plugin.CodeAction", "function": "findPositionNoImports"}, {"startline": 1430, "endline": 1494, "file": "ghcide/src/Development/IDE/Plugin/CodeAction.hs", "module": "Development.IDE.Plugin.CodeAction", "function": "findPositionAfterModuleName"}]}, {"id": "pandoc-1", "repositoryurl": "git@github.com:jgm/pandoc", "repository": "pandoc", "license": "GPLv2", "hasbugsversion": "1.0.0", "faultcommit": "b0195b7ef4d55c1d7339cd77aa0e3a039a095807", "fixcommit": "b888a8c77e35cc028725aff0f581475ec0481af9", "ghcversion": "8.10.7", "buildframework": "stack", "testframeworks": ["tasty", "tasty-golden", "tasty-hunit", "tasty-quickcheck"], "testpatch": true, "testedwith": "tasty", "description": "Docbook Files support linked figures, which should be convertable to other formats. DocBooks xref elements can link to figures, but the text inserted for the title of the link would be 'figure_title'(default placeholder) rather than the title of the figure. The fix is to add the 'title' attribute and use the title if available.", "categories": ["integration-test", "missed case", "default value"], "relatedissues": ["https://github.com/jgm/pandoc/issues/8064"], "relatedprs": ["https://github.com/jgm/pandoc/pull/8065"], "faultlocations": [], "fixlocations": [{"startline": 1345, "endline": 1345, "file": "src/Text/Pandoc/Readers/DocBook.hs", "module": "Text.Pandoc.Readers.DocBook", "function": "parseInline"}]}, {"id": "pandoc-2", "repositoryurl": "git@github.com:jgm/pandoc", "repository": "pandoc", "license": "GPLv2", "hasbugsversion": "1.0.0", "faultcommit": "6b7a68869593bbf8097bbcd39021fcaa3523270e", "fixcommit": "e146b1ff3b1c4204a678269a967d94f1df4b38c0", "ghcversion": "8.10.7", "buildframework": "stack", "testedwith": "tasty", "testframeworks": ["tasty", "tasty-golden", "tasty-hunit", "tasty-quickcheck"], "testpatch": true, "description": "When a file was rendered into DOCX with two tables in them, the space between them would be deleted when there was some comment block in-between.The comment should be ignored and a paragraph should be inserted for spacing.", "categories": ["integration-test", "missed case", "feature-collision"], "relatedissues": ["https://github.com/jgm/pandoc/issues/7724"], "relatedprs": ["https://github.com/jgm/pandoc/pull/7844"], "faultlocations": [{"startline": 772, "endline": 772, "file": "src/Text/Pandoc/Writers/Docx.hs", "module": "Text.Pandoc.Writers.Docx", "function": "blocksToOpenXML"}], "fixlocations": [{"startline": 772, "endline": 772, "file": "src/Text/Pandoc/Writers/Docx.hs", "module": "Text.Pandoc.Writers.Docx", "function": "blocksToOpenXML"}, {"startline": 774, "endline": 776, "file": "src/Text/Pandoc/Writers/Docx.hs", "module": "Text.Pandoc.Writers.Docx", "function": "isForeignRawBlock"}]}, {"id": "pandoc-4", "repositoryurl": "git@github.com:jgm/pandoc", "repository": "pandoc", "license": "GPLv2", "hasbugsversion": "1.0.0", "faultcommit": "a21d6e9fa6d9e0287b6db05fc663810337ef3f9a", "fixcommit": "f317ec41a1948e35330364c3120d937cc9934888", "ghcversion": "8.10.7", "buildframework": "stack", "testedwith": "tasty-golden", "testframeworks": ["tasty", "tasty-golden", "tasty-hunit", "tasty-quickcheck"], "testpatch": true, "description": "Formatting in code blocks is not allowed by pandoc, causing bold code to be possible but a code block with parts bold in it impossible for LaTeX. The fix is to make sure formatting of a code block happens outside of the codeblock.", "categories": ["formatting", "missing-check", "integration-test"], "relatedissues": ["https://github.com/jgm/pandoc/issues/7525"], "relatedprs": ["https://github.com/jgm/pandoc/pull/8129"], "faultlocations": [{"startline": 350, "endline": 350, "file": "src/Text/Pandoc/Readers/LaTeX.hs", "module": "Text.Pandoc.Readers.LaTeX", "function": "inlineCommands"}, {"startline": 371, "endline": 371, "file": "src/Text/Pandoc/Readers/LaTeX.hs", "module": "Text.Pandoc.Readers.LaTeX", "function": "inlineCommands"}, {"startline": 410, "endline": 411, "file": "src/Text/Pandoc/Readers/LaTeX.hs", "module": "Text.Pandoc.Readers.LaTeX", "function": "inlineCommands"}], "fixlocations": [{"startline": 350, "endline": 350, "file": "src/Text/Pandoc/Readers/LaTeX.hs", "module": "Text.Pandoc.Readers.LaTeX", "function": "inlineCommands"}, {"startline": 371, "endline": 371, "file": "src/Text/Pandoc/Readers/LaTeX.hs", "module": "Text.Pandoc.Readers.LaTeX", "function": "inlineCommands"}, {"startline": 410, "endline": 411, "file": "src/Text/Pandoc/Readers/LaTeX.hs", "module": "Text.Pandoc.Readers.LaTeX", "function": "inlineCommands"}, {"startline": 783, "endline": 802, "file": "src/Text/Pandoc/Shared.hs", "module": "Text.Pandoc.Shared", "function": "formatCode"}]}, {"id": "pandoc-5", "repositoryurl": "git@github.com:jgm/pandoc", "repository": "pandoc", "hasbugsversion": "1.0.0", "license": "GPLv2", "faultcommit": "651a3d96c499a27556f6a12591bc04bd4cba7630", "fixcommit": "c3b170be1c3c11465e5b0a64b6f59c875323a592", "ghcversion": "8.10.7", "buildframework": "stack", "testedwith": "tasty", "testframeworks": ["tasty", "tasty-golden", "tasty-hunit", "tasty-quickcheck"], "testpatch": true, "description": "When a code-block starts with a period, ROFF MS interpreted this as a command rather than a part of the code-block. The solution is to escape the periods.", "categories": ["formatting", "escaping", "integration-test", "close-to-unit-test"], "relatedissues": ["https://github.com/jgm/pandoc/issues/6505"], "relatedprs": ["https://github.com/jgm/pandoc/pull/6513"], "faultlocations": [{"startline": 207, "endline": 207, "file": "src/Text/Pandoc/Writers/Ms.hs", "module": "Text.Pandoc.Writers.Ms", "function": "blockToMs"}], "fixlocations": [{"startline": 207, "endline": 209, "file": "src/Text/Pandoc/Writers/Ms.hs", "module": "Text.Pandoc.Writers.Ms", "function": "blockToMs"}]}, {"id": "pandoc-6", "repositoryurl": "git@github.com:jgm/pandoc", "repository": "pandoc", "license": "GPLv2", "hasbugsversion": "1.0.0", "faultcommit": "b64ece76cb9f21e41b19678dc8ae247dbe9ab4cc", "fixcommit": "83c1ce1d77d3ef058e4e5c645a8eb0379fab780f", "ghcversion": "8.10.7", "buildframework": "stack", "testedwith": "tasty", "testframeworks": ["tasty", "tasty-golden", "tasty-hunit", "tasty-quickcheck"], "testpatch": true, "description": "Inline Markdown code-blocks had a slight parsing/priority problem. Code blocks with '(1)' in them would be wrongly delimited. The fix is to reorder parsing steps to account for lists inner-nested.", "categories": ["parsing", "unit-test"], "relatedissues": ["https://github.com/jgm/pandoc/issues/6284"], "relatedprs": ["https://github.com/jgm/pandoc/pull/6289"], "faultlocations": [{"startline": 1520, "endline": 1525, "file": "src/Text/Pandoc/Readers/Markdown.hs", "module": "Text.Pandoc.Readers.Markdown", "function": "code"}], "fixlocations": [{"startline": 1520, "endline": 1530, "file": "src/Text/Pandoc/Readers/Markdown.hs", "module": "Text.Pandoc.Readers.Markdown", "function": "code"}]}, {"id": "pandoc-7", "repositoryurl": "git@github.com:jgm/pandoc", "repository": "pandoc", "license": "GPLv2", "hasbugsversion": "1.0.0", "faultcommit": "3766e03c7d2e4fb0378bb9de1420fa4f6c8107a2", "fixcommit": "482a2e50798481f484267bdcfb7b305ea7bd7971", "ghcversion": "8.10.7", "buildframework": "stack", "testedwith": "tasty", "testframeworks": ["tasty", "tasty-golden", "tasty-hunit", "tasty-quickcheck"], "testpatch": true, "description": "Empty table cells were filtered out when reading LaTeX tables without handling multirows and multicols properly. By adding code for recognising multicols and rows correctly, empty cells can now be filtered without shifting other cells out of place.", "categories": ["parsing", "data-loss", "unit-test"], "relatedissues": ["https://github.com/jgm/pandoc/issues/6681"], "relatedprs": ["https://github.com/jgm/pandoc/pull/6608"], "faultlocations": [{"startline": 2386, "endline": 2386, "file": "src/Text/Pandoc/Readers/LaTeX.hs", "module": "Text.Pandoc.Readers.LaTeX", "function": "parseTableRow"}, {"startline": 2392, "endline": 2392, "file": "src/Text/Pandoc/Readers/LaTeX.hs", "module": "Text.Pandoc.Readers.LaTeX", "function": "parseTableCell"}, {"startline": 2414, "endline": 2439, "file": "src/Text/Pandoc/Readers/LaTeX.hs", "module": "Text.Pandoc.Readers.LaTeX", "function": "parseMultiCell"}], "fixlocations": [{"startline": 2386, "endline": 2388, "file": "src/Text/Pandoc/Readers/LaTeX.hs", "module": "Text.Pandoc.Readers.LaTeX", "function": "parseTableRow"}, {"startline": 2394, "endline": 2398, "file": "src/Text/Pandoc/Readers/LaTeX.hs", "module": "Text.Pandoc.Readers.LaTeX", "function": "parseTableCell"}, {"startline": 2402, "endline": 2405, "file": "src/Text/Pandoc/Readers/LaTeX.hs", "module": "Text.Pandoc.Readers.LaTeX", "function": "parseTableCell"}, {"startline": 2424, "endline": 2459, "file": "src/Text/Pandoc/Readers/LaTeX.hs", "module": "Text.Pandoc.Readers.LaTeX", "function": "multicolumnCell"}]}, {"id": "purescript-1", "repositoryurl": "git@github.com:purescript/purescript", "repository": "purescript", "license": "Custom Copyleft", "hasbugsversion": "1.0.0", "faultcommit": "3d6b8bf7ffee6c6be85580b7daa765a9b54d0564", "fixcommit": "ea118aec3d54a4918825b1e438d3ae4bb9181447", "ghcversion": "9.2.4", "buildframework": "cabal", "testframeworks": ["hspec", "hunit", "quickcheck"], "testpatch": true, "testedwith": "hspec", "description": "Purescript supports typed holes, which users can utilize to get type-correct replacements for the typed holes. When users asked for possible values in Type Holes, the suggested values where (sometimes) duplicated", "categories": ["desugaring-issue", "integration"], "relatedissues": ["https://github.com/purescript/purescript/issues/4373"], "relatedprs": ["https://github.com/purescript/purescript/pull/4374"], "faultlocations": [{"startline": 383, "endline": 384, "file": "./src/Language/PureScript/Sugar/CaseDeclarations.hs", "module": "Language.PureScript.Sugar.CaseDeclarations", "function": "makeCaseDeclaration"}, {"startline": 386, "endline": 386, "file": "./src/Language/PureScript/Sugar/CaseDeclarations.hs", "module": "Language.PureScript.Sugar.CaseDeclarations", "function": "makeCaseDeclaration"}, {"startline": 394, "endline": 395, "file": "./src/Language/PureScript/Sugar/CaseDeclarations.hs", "module": "Language.PureScript.Sugar.CaseDeclarations", "function": "makeCaseDeclaration"}, {"startline": 404, "endline": 406, "file": "./src/Language/PureScript/Sugar/CaseDeclarations.hs", "module": "Language.PureScript.Sugar.CaseDeclarations", "function": "makeCaseDeclaration"}, {"startline": 410, "endline": 410, "file": "./src/Language/PureScript/Sugar/CaseDeclarations.hs", "module": "Language.PureScript.Sugar.CaseDeclarations", "function": "makeCaseDeclaration"}, {"startline": 415, "endline": 415, "file": "./src/Language/PureScript/Sugar/CaseDeclarations.hs", "module": "Language.PureScript.Sugar.CaseDeclarations", "function": "makeCaseDeclaration"}], "fixlocations": [{"startline": 383, "endline": 384, "file": "./src/Language/PureScript/Sugar/CaseDeclarations.hs", "module": "Language.PureScript.Sugar.CaseDeclarations", "function": "makeCaseDeclaration"}, {"startline": 386, "endline": 386, "file": "./src/Language/PureScript/Sugar/CaseDeclarations.hs", "module": "Language.PureScript.Sugar.CaseDeclarations", "function": "makeCaseDeclaration"}, {"startline": 394, "endline": 395, "file": "./src/Language/PureScript/Sugar/CaseDeclarations.hs", "module": "Language.PureScript.Sugar.CaseDeclarations", "function": "makeCaseDeclaration"}, {"startline": 404, "endline": 406, "file": "./src/Language/PureScript/Sugar/CaseDeclarations.hs", "module": "Language.PureScript.Sugar.CaseDeclarations", "function": "makeCaseDeclaration"}, {"startline": 410, "endline": 410, "file": "./src/Language/PureScript/Sugar/CaseDeclarations.hs", "module": "Language.PureScript.Sugar.CaseDeclarations", "function": "makeCaseDeclaration"}, {"startline": 415, "endline": 415, "file": "./src/Language/PureScript/Sugar/CaseDeclarations.hs", "module": "Language.PureScript.Sugar.CaseDeclarations", "function": "makeCaseDeclaration"}]}, {"id": "shellcheck-1", "repositoryurl": "git@github.com:koalaman/shellcheck", "repository": "shellcheck", "license": "GPL3", "hasbugsversion": "1.0.0", "faultcommit": "9008a6833bb5996f248dad0bde3c3e05ec22e65d", "fixcommit": "fdd02c94c01b81b78e2dada903ea88e29a39befe", "ghcversion": "9.2.4", "buildframework": "stack", "testframeworks": ["QuickCheck"], "testpatch": true, "testedwith": "QuickCheck", "description": "ShellCheck warned for a non-assigned variable due to nesting and a pattern match, despite correct snytax. The fix is to filter for sub-processes.", "categories": ["missing-check", "unit-test"], "relatedissues": ["https://github.com/koalaman/shellcheck/issues/1759"], "relatedprs": ["https://github.com/koalaman/shellcheck/pull/1779"], "faultlocations": [{"startline": 675, "endline": 675, "file": "src/ShellCheck/AnalyzerLib.hs", "module": "ShellCheck.AnalyzerLib", "function": "getModifiedVariableCommand"}], "fixlocations": [{"startline": 676, "endline": 676, "file": "src/ShellCheck/AnalyzerLib.hs", "module": "ShellCheck.AnalyzerLib", "function": "getModifiedVariableCommand"}, {"startline": 681, "endline": 683, "file": "src/ShellCheck/AnalyzerLib.hs", "module": "ShellCheck.AnalyzerLib", "function": "getModifiedVariableCommand"}]}, {"id": "shellcheck-2", "repositoryurl": "git@github.com:koalaman/shellcheck/", "repository": "shellcheck", "license": "GPL3", "hasbugsversion": "1.0.0", "faultcommit": "9eb63c97e6a5764b2fe0cb3e3e36cea5ade72a13", "fixcommit": "0d58337cdd05d4d724ce1db4bcd6e1eb6c8721cf", "ghcversion": "9.2.5", "buildframework": "stack", "testframeworks": ["QuickCheck"], "testpatch": true, "testedwith": "QuickCheck", "description": "Shellcheck warned for elements within a range ([]) to be repetitive, but that also warned for wishfully repeated element such as variables. The fix is to account for dereferenced elements, such as variables, and not warn in those.", "categories": ["value-checks", "missing-case"], "relatedissues": ["https://github.com/koalaman/shellcheck/issues/2285", "https://github.com/koalaman/shellcheck/issues/2113"], "relatedprs": [""], "faultlocations": [{"startline": 2523, "endline": 2523, "file": "./src/ShellCheck/Analytics.hs", "module": "ShellCheck.Analytics", "function": "checkCharRangeGlob"}], "fixlocations": [{"startline": 2525, "endline": 2525, "file": "./src/ShellCheck/Analytics.hs", "module": "ShellCheck.Analytics", "function": "checkCharRangeGlob"}, {"startline": 2544, "endline": 2550, "file": "./src/ShellCheck/Analytics.hs", "module": "ShellCheck.Analytics", "function": "checkCharRangeGlob"}, {"startline": 740, "endline": 740, "file": "./src/ShellCheck/AnalyzerLib.hs", "module": "ShellCheck.AnalyzerLib", "function": "getReferencedVariables"}, {"startline": 778, "endline": 779, "file": "./src/ShellCheck/AnalyzerLib.hs", "module": "ShellCheck.AnalyzerLib", "function": "getReferencedVariables"}]}, {"id": "shellcheck-3", "repositoryurl": "git@github.com:koalaman/shellcheck/", "repository": "shellcheck", "license": "GPL3", "hasbugsversion": "1.0.0", "faultcommit": "dd626686c420568752202646e254d51a107e5b95", "fixcommit": "3a118246ef2e6e37129cb0f1c0d1dae319385520", "ghcversion": "9.2.5", "buildframework": "stack", "testframeworks": ["QuickCheck"], "testpatch": true, "testedwith": "QuickCheck", "description": "A suggestion in changing 'grep' patterns would lead to a false behaviour, if applied as such by the user. The fix is to be more restrictive when suggesting this replacement, specifically the grep context-options -A and -B.", "categories": ["logic", "missing-case", "unit-test"], "relatedissues": ["https://github.com/koalaman/shellcheck/issues/2585"], "relatedprs": ["https://github.com/koalaman/shellcheck/pull/2414"], "faultlocations": [{"startline": 569, "endline": 569, "file": "./src/ShellCheck/Analytics.hs", "module": "ShellCheck.Analytics", "function": "checkPipePitfalls"}, {"startline": 572, "endline": 572, "file": "./src/ShellCheck/Analytics.hs", "module": "ShellCheck.Analytics", "function": "checkPipePitfalls"}], "fixlocations": [{"startline": 573, "endline": 573, "file": "./src/ShellCheck/Analytics.hs", "module": "ShellCheck.Analytics", "function": "checkPipePitfalls"}, {"startline": 576, "endline": 576, "file": "./src/ShellCheck/Analytics.hs", "module": "ShellCheck.Analytics", "function": "checkPipePitfalls"}]}, {"id": "shellcheck-4", "repositoryurl": "git@github.com:koalaman/shellcheck/", "repository": "shellcheck", "license": "GPL3", "hasbugsversion": "1.0.0", "faultcommit": "819470fa1de0e024125aad7e2d2499ca5627f8b9", "fixcommit": "f7857028f7a019b47c8a5294dd8d4182e5bed864", "ghcversion": "9.2.5", "buildframework": "stack", "testframeworks": ["QuickCheck"], "testpatch": true, "testedwith": "QuickCheck", "description": "Shellcheck can warn for the usage of escape-characters in echo-commands. The used regex did not account for all end-of-line characters, missing out potential warnings. The fix is to expand the regex.", "categories": ["regex", "escaping", "unit-test"], "relatedissues": ["https://github.com/koalaman/shellcheck/issues/2476"], "relatedprs": ["https://github.com/koalaman/shellcheck/pull/2543"], "faultlocations": [{"startline": 486, "endline": 486, "file": "./src/ShellCheck/Checks/Commands.hs", "module": "ShellCheck.Checks.Commands", "function": "checkUnusedEchoEscapes"}], "fixlocations": [{"startline": 493, "endline": 493, "file": "./src/ShellCheck/Checks/Commands.hs", "module": "ShellCheck.Checks.Commands", "function": "checkUnusedEchoEscapes"}]}, {"id": "shellcheck-5", "repositoryurl": "git@github.com:koalaman/shellcheck/", "repository": "shellcheck", "license": "GPL3", "hasbugsversion": "1.0.0", "faultcommit": "5005dc0fa1f62e4d82348e342832470818120041", "fixcommit": "0d1a34a291ed3787f261986b026129b267d2d4bf", "ghcversion": "8.10.7", "buildframework": "stack", "testframeworks": ["QuickCheck"], "testpatch": true, "testedwith": "QuickCheck", "description": "ShellCheck performs many checks around function-declaration. When declaring a function,the @ Character would not be recognized as valid in (-front of) function names. The fix is to adjust the parser, to consider it a valid function name.", "categories": ["missing-case", "parsing", "unit-test"], "relatedissues": ["https://github.com/koalaman/shellcheck/issues/949", "https://github.com/koalaman/shellcheck/issues/909"], "relatedprs": ["https://github.com/koalaman/shellcheck/pull/1302"], "faultlocations": [{"startline": 69, "endline": 69, "file": "./src/ShellCheck/Parser.hs", "module": "ShellCheck.Parser", "function": "doubleQuote"}], "fixlocations": [{"startline": 69, "endline": 69, "file": "./src/ShellCheck/Parser.hs", "module": "ShellCheck.Parser", "function": "doubleQuote"}]}], "creationdate": "2023-01-25"}